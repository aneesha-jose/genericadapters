apply plugin: 'maven-publish'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

version '1.0' // your library version
group 'com.aneeshajose' // whatever group name you'd like
def gitUrl = 'https://github.com/aneesha-jose/genericadapters.git'

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    excludes = ['**/*.kt']
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        Production(MavenPublication) {

            groupId this.group
            artifactId 'genericadapters' // replace with your library artifact id
            version this.version
            artifact(javadocJar)
            artifact(sourcesJar)
            artifact("$buildDir/outputs/aar/genericadapters.aar") // replace with your library name

            pom.withXml {
                def rootNode = asNode()
                def dependenciesNode = rootNode.appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones),
                // adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("user")
    key = properties.getProperty("apiKey")
    publications = ['Production']
    configurations = ['archives']
    // Default: false. Whether to run this as dry-run, without deploying
    dryRun = false
    // Default: false. Whether to override version artifacts already published
    override = false
    // Default: false. Whether version should be auto published after an upload
    publish = true

    pkg {
        repo = 'miscellaneous-android' // the name of the repository you created on Bintray
        name = 'com.aneeshajose.genericadapters' // the name of the package you created inside it
        version {
            name = this.version
            released = new Date()
            vcsTag = this.version
            vcsUrl = gitUrl
        }
    }
}